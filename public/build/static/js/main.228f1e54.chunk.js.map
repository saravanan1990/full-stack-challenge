{"version":3,"sources":["components/CreateForm.js","components/AddFounder.js","components/AddCategory.js","components/CompanyView.js","components/EditForm.js","components/Companies.js","App.js","serviceWorker.js","index.js"],"names":["props","useState","Date","date","setDate","className","onSubmit","event","onCreateCompany","for","type","name","id","selected","onChange","dat","value","rows","align","onClick","setAddCompanyflag","data-disable-with","Modal","show","onHide","handleClose","animation","Header","closeButton","Title","Body","preventDefault","payload","target","title","company_id","companyId","fetch","method","body","JSON","stringify","founder","headers","then","res","ok","json","response","updateCompanyView","catch","err","alert","statusText","htmlFor","placeholder","aria-describedby","category","showFounder","setShowFounder","showCategory","setShowCategory","company","founders","categories","founded_on","city","state","trggierEditCompany","trggierDeleteCompany","setviewCompanyflag","description","class","map","UpdateCompany","seteditCompanyflag","Companies","getcompanylist","setlistCompany","getcompanyview","setviewCompany","getcompanyviewflag","setviewCompanyid","getcompanyaddflag","setaddCompanyflag","getcompanyedit","seteditCompany","getcompanyeditflag","ViewCompany","comp_id","message","useEffect","error","console","log","CreateForm","CreateCompany","isTrue","CompanyView","EditForm","url","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kNAGe,WAACA,GAAW,IAAD,EAEAC,mBAAS,IAAIC,MAFb,mBAEjBC,EAFiB,KAEXC,EAFW,KAIxB,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACd,yBAAKA,UAAU,aACZ,yBAAKA,UAAU,aACb,wBAAIA,UAAU,eAAd,wBACA,6BACE,0BAAMC,SAAU,SAAAC,GAAK,OAAIP,EAAMQ,gBAAgBD,KAC7C,yBAAKF,UAAU,wBACb,2BAAOI,IAAI,yBAAwB,2BAAOA,IAAI,gBAAX,gBAAnC,KACA,2BAAOC,KAAK,OAAOC,KAAK,OAAOC,GAAG,OAAOP,UAAU,kBAErD,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,uBACb,2BAAOI,IAAI,aAAY,2BAAOA,IAAI,gBAAX,QAAvB,KACA,2BAAOC,KAAK,OAAOC,KAAK,OAAOC,GAAG,OAAOP,UAAU,kBAErD,yBAAKA,UAAU,uBACb,2BAAOI,IAAI,cAAa,2BAAOA,IAAI,iBAAX,SAAxB,KACA,2BAAOC,KAAK,OAAOC,KAAK,QAAQC,GAAG,QAAQP,UAAU,kBAEvD,yBAAKA,UAAU,uBACb,2BAAOI,IAAI,cAAa,2BAAOA,IAAI,wBAAX,gBAAxB,KACA,yBAAKJ,UAAU,eACb,kBAAC,IAAD,CACEQ,SAAUV,EACVW,SAAU,SAACC,GAAD,OAASX,EAAQW,MAE7B,2BACEV,UAAU,0BACVK,KAAK,SACLC,KAAK,aACLC,GAAG,aACHI,MAAOb,QAMjB,yBAAKE,UAAU,wBACb,2BAAOI,IAAI,+BAA8B,2BAAOA,IAAI,uBAAX,eAAzC,KACA,8BAAUE,KAAK,cAAcC,GAAG,cAAcK,KAAK,IAAIZ,UAAU,kBAEnE,yBAAKA,UAAU,uBAAuBa,MAAM,SAC1C,yBAAKb,UAAU,aACb,4BAAQK,KAAK,SAASL,UAAU,kBAAkBc,QAAS,kBAAMnB,EAAMoB,mBAAkB,KAAzF,QACA,2BAAOV,KAAK,SAASC,KAAK,SAASN,UAAU,kBAAkBW,MAAM,iBAAiBK,oBAAkB,4B,SCpD/G,WAACrB,GAgCd,OACE,kBAACsB,EAAA,EAAD,CAAOC,KAAMvB,EAAMuB,KAAMC,OAAQxB,EAAMyB,YAAaC,WAAW,GAC7D,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,kBAACN,EAAA,EAAMO,MAAP,wBAEF,kBAACP,EAAA,EAAMQ,KAAP,KACA,0BAAMxB,SApCW,SAACC,GACpBA,EAAMwB,iBAEN,IACGC,EAAU,CACXrB,KAAMJ,EAAM0B,OAAOtB,KAAKK,MACxBkB,MAAO3B,EAAM0B,OAAOC,MAAMlB,MAC1BmB,WAAYnC,EAAMoC,WAEpBC,MANY,uCAMD,CACXC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACC,QAASV,IAC/BW,QAAS,CACR,eAAgB,mBAChB,OAAU,sBAGVC,MAAK,SAAAC,GAAO,IAAKA,EAAIC,GAAM,MAAMD,EAChC,OAAOA,EAAIE,UAEZH,MAAK,SAAAI,GACJhD,EAAMiD,oBACNjD,EAAMyB,iBAEPyB,OAAO,SAAAC,GACPC,MAAMD,EAAIE,iBAYP,yBAAKhD,UAAU,cACb,2BAAOiD,QAAQ,QAAf,QACA,2BAAO5C,KAAK,OAAOL,UAAU,eAAeM,KAAK,OAAOC,GAAG,OAAO2C,YAAY,OAAOC,mBAAiB,eAExG,yBAAKnD,UAAU,cACb,2BAAOiD,QAAQ,SAAf,SACA,2BAAO5C,KAAK,OAAOL,UAAU,eAAeM,KAAK,QAAQC,GAAG,QAAQ2C,YAAY,WAElF,4BAAQ7C,KAAK,SAASL,UAAU,mBAAhC,cC/CO,WAACL,GA+Bd,OACE,kBAACsB,EAAA,EAAD,CAAOC,KAAMvB,EAAMuB,KAAMC,OAAQxB,EAAMyB,YAAaC,WAAW,GAC7D,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,kBAACN,EAAA,EAAMO,MAAP,yBAEF,kBAACP,EAAA,EAAMQ,KAAP,KACA,0BAAMxB,SAnCW,SAACC,GACpBA,EAAMwB,iBAEN,IACGC,EAAU,CACXrB,KAAMJ,EAAM0B,OAAOtB,KAAKK,MACxBmB,WAAYnC,EAAMoC,WAEpBC,MALY,yCAKD,CACXC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACgB,SAAUzB,IAChCW,QAAS,CACR,eAAgB,mBAChB,OAAU,sBAGVC,MAAK,SAAAC,GAAO,IAAKA,EAAIC,GAAM,MAAMD,EAChC,OAAOA,EAAIE,UAEZH,MAAK,SAAAI,GACJhD,EAAMiD,oBACNjD,EAAMyB,iBAEPyB,OAAO,SAAAC,GACPC,MAAMD,EAAIE,iBAYP,yBAAKhD,UAAU,cACb,2BAAOiD,QAAQ,QAAf,QACA,2BAAO5C,KAAK,OAAOL,UAAU,eAAeM,KAAK,OAAOC,GAAG,OAAO2C,YAAY,OAAOC,mBAAiB,eAExG,4BAAQ9C,KAAK,SAASL,UAAU,mBAAhC,cCzCO,WAACL,GAAW,IAAD,EAEcC,oBAAS,GAFvB,mBAEjByD,EAFiB,KAEJC,EAFI,OAGgB1D,oBAAS,GAHzB,mBAGjB2D,EAHiB,KAGHC,EAHG,KAWjBC,EAAiC9D,EAAjC8D,QAASC,EAAwB/D,EAAxB+D,SAAUC,EAAchE,EAAdgE,WAE1B,OACE,yBAAK3D,UAAU,aACb,kBAAC,EAAD,CACEkB,KAAMmC,EACNtB,UAAW0B,EAAQlD,GACnBa,YAbc,kBAAMkC,GAAe,IAcnCV,kBAAoB,kBAAMjD,EAAMiD,kBAAkBa,EAAQlD,OAE5D,kBAAC,EAAD,CACEW,KAAMqC,EACNnC,YAfsB,kBAAMoC,GAAgB,IAgB5CzB,UAAW0B,EAAQlD,GACnBqC,kBAAoB,kBAAMjD,EAAMiD,kBAAkBa,EAAQlD,OAE5D,yBAAKP,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAcyD,EAAQnD,MAAU,6BAC9C,yBAAKN,UAAU,OACb,yBAAKA,UAAU,YACb,2BAAG,uBAAGA,UAAU,mBAAhB,IAAuCyD,EAAQG,aAEjD,yBAAK5D,UAAU,YACb,2BAAG,uBAAGA,UAAU,qBAAhB,IAAyCyD,EAAQI,KAAMJ,EAAQK,QAEjE,yBAAK9D,UAAU,cACf,yBAAKA,UAAU,YACb,2BAAOA,UAAU,kBAAkBK,KAAK,SAASM,MAAM,OAAOG,QAAS,kBAAMnB,EAAMoE,mBAAmBN,EAAQlD,OAC9G,2BAAOP,UAAU,iBAAiBK,KAAK,SAASM,MAAM,SAASG,QAAS,kBAAMnB,EAAMqE,qBAAqBP,EAAQlD,OACjH,2BAAOP,UAAU,kBAAkBK,KAAK,SAASM,MAAM,OAAOG,QAAS,kBAAMnB,EAAMsE,oBAAmB,QAEpG,6BACN,uBAAGjE,UAAU,aAAayD,EAAQS,aAClC,yBAAKlE,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKmE,MAAM,aACT,wBAAIA,MAAM,eAAV,YACA,yBAAKnE,UAAU,aACb,yBAAKA,UAAU,qBACV0D,GAAYA,EAASU,KAAI,SAAC/B,GAAD,OAC1B,yBAAKrC,UAAU,YACb,4BAAKqC,EAAQ/B,KAAb,MAAqB,8BAAO+B,EAAQR,aAI1C,yBAAK7B,UAAU,YAAYa,MAAM,SAC/B,2BAAOb,UAAU,kBAAkBK,KAAK,SAASS,QAtDpD,kBAAMwC,GAAe,IAsDoD3C,MAAM,qBAMtF,yBAAKX,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,eAAd,cACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qBACV2D,GAAcA,EAAWS,KAAI,SAAChB,GAAD,OAC9B,yBAAKpD,UAAU,YACb,4BAAKoD,EAAS9C,WAInB,yBAAKN,UAAU,YAAYa,MAAM,SAChC,2BAAOb,UAAU,kBAAkBK,KAAK,SAASM,MAAM,eAAeG,QAtEjE,kBAAM0C,GAAgB,iBCVpC,WAAC7D,GAAW,IAElB8D,EAAW9D,EAAX8D,QAFiB,EAIA7D,mBAAS,IAAIC,KAAK4D,EAAQG,aAJ1B,mBAIjB9D,EAJiB,KAIXC,EAJW,KAMxB,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACd,yBAAKA,UAAU,aACZ,yBAAKA,UAAU,aACb,wBAAIA,UAAU,eAAd,gBACA,6BACE,0BAAMC,SAAU,SAAAC,GAAK,OAAIP,EAAM0E,cAAcnE,KAC3C,yBAAKF,UAAU,wBACb,2BAAOI,IAAI,yBAAwB,2BAAOA,IAAI,gBAAX,gBAAnC,KACA,2BAAOC,KAAK,OAAOC,KAAK,OAAOC,GAAG,OAAOI,MAAO8C,EAAQnD,KAAMN,UAAU,kBAE1E,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,uBACb,2BAAOI,IAAI,aAAY,2BAAOA,IAAI,gBAAX,QAAvB,KACA,2BAAOC,KAAK,OAAOC,KAAK,OAAOC,GAAG,OAAOI,MAAO8C,EAAQI,KAAM7D,UAAU,iBACxE,2BAAOK,KAAK,SAASC,KAAK,KAAKC,GAAG,KAAKI,MAAO8C,EAAQlD,GAAIP,UAAU,kBAEtE,yBAAKA,UAAU,uBACb,2BAAOI,IAAI,cAAa,2BAAOA,IAAI,iBAAX,SAAxB,KACA,2BAAOC,KAAK,OAAOC,KAAK,QAAQC,GAAG,QAAQI,MAAO8C,EAAQK,MAAO9D,UAAU,kBAE7E,yBAAKA,UAAU,uBACb,2BAAOI,IAAI,cAAa,2BAAOA,IAAI,wBAAX,gBAAxB,KACA,yBAAKJ,UAAU,eACb,kBAAC,IAAD,CACEQ,SAAUV,EACVW,SAAU,SAACC,GAAD,OAASX,EAAQW,MAE7B,2BACEV,UAAU,0BACVK,KAAK,SACLC,KAAK,aACLC,GAAG,aACHI,MAAOb,QAMjB,yBAAKE,UAAU,wBACb,2BAAOI,IAAI,+BAA8B,2BAAOA,IAAI,uBAAX,eAAzC,KACA,8BAAUE,KAAK,cAAcC,GAAG,cAAcK,KAAK,IAAID,MAAO8C,EAAQS,YAAalE,UAAU,kBAE/F,yBAAKA,UAAU,uBAAuBa,MAAM,SAC1C,yBAAKb,UAAU,aACb,2BAAOK,KAAK,SAASC,KAAK,SAASN,UAAU,kBAAkBW,MAAM,iBAAiBK,oBAAkB,mBACxG,2BAAOhB,UAAU,kBAAkBK,KAAK,SAASM,MAAM,OAAOG,QAAS,kBAAMnB,EAAM2E,oBAAmB,eCmL7GC,MAvOf,WAAqB,IAAD,EAEsB3E,mBAAS,IAF/B,mBAEZ4E,EAFY,KAEIC,EAFJ,OAIsB7E,mBAAS,IAJ/B,mBAIZ8E,EAJY,KAIIC,EAJJ,OAK8B/E,oBAAS,GALvC,mBAKZgF,EALY,KAKQX,EALR,OAM0BrE,mBAAS,GANnC,mBAMMiF,GANN,aAQ4BjF,oBAAS,GARrC,mBAQZkF,EARY,KAQOC,EARP,OAUsBnF,mBAAS,IAV/B,mBAUZoF,EAVY,KAUIC,EAVJ,OAW8BrF,oBAAS,GAXvC,mBAWZsF,EAXY,KAWQZ,EAXR,OAa4B1E,oBAAS,GAbrC,gCAe8BA,oBAAS,IAfvC,mBA2HlB,SAASuF,EAAYC,GACpBP,EAAiBO,GAEhBpD,MADW,mCAAmCoD,EAAQ,SAC3C,CACXnD,OAAQ,MACRK,QAAS,CACR,eAAgB,mBAChB,OAAU,sBAGVC,MAAK,SAAAC,GAAO,IAAKA,EAAIC,GAAM,MAAMD,EAClC,OAAOA,EAAIE,UACVH,MAAK,SAAAI,GACJgC,EAAehC,EAAS0C,SACxBpB,GAAmB,MAEpBpB,OAAO,SAAAC,GACPC,MAAMD,EAAIE,eA0Bb,OAtKkB,UAiBlBsC,qBAAU,WAERtD,MADW,wCACA,CACXC,OAAQ,MACRK,QAAS,CACR,eAAgB,mBAChB,OAAU,sBAGVC,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAI,GACJ8B,EAAe9B,EAAS0C,YAEzBxC,OAAM,SAAA0C,GAAK,OAAIC,QAAQC,IAAIF,QAC3B,IAuICT,EAEH,kBAACY,EAAD,CACCvF,gBAAkB,SAACD,GAAD,OA5HpB,SAAuBA,GACtBA,EAAMwB,iBACN,IACIC,EAAU,CAACrB,KAAMJ,EAAM0B,OAAOtB,KAAKK,MACvCkD,KAAM3D,EAAM0B,OAAOiC,KAAKlD,MACxBmD,MAAO5D,EAAM0B,OAAOkC,MAAMnD,MAC1BiD,WAAY1D,EAAM0B,OAAOgC,WAAWjD,MACpCuD,YAAahE,EAAM0B,OAAOsC,YAAYvD,OACrCqB,MANW,wCAMA,CACXC,OAAQ,OACRC,KAAMC,KAAKC,UAAUT,GACrBW,QAAS,CACR,eAAgB,mBAChB,OAAU,sBAGVC,MAAK,SAAAC,GAAO,IAAKA,EAAIC,GAAM,MAAMD,EAClC,OAAOA,EAAIE,UACVH,MAAK,SAAAI,GACJgC,EAAehC,GACfoC,GAAkB,GAClBd,GAAmB,MAEpBpB,OAAO,SAAAC,GACPC,MAAMD,EAAIE,eAoGkB2C,CAAczF,IAC3Ca,kBAAmB,SAAC6E,GAAD,OAAYb,EAAkBa,MAK/ChB,EAEH,kBAACiB,EAAD,CACCpC,QAASiB,EAAejB,QACxBC,SAAUgB,EAAehB,SACzBC,WAAYe,EAAef,WAC3BI,mBAAoB,SAACxD,GAAD,OA3GrBsE,EAD2BO,EA4GqB7E,QAzG/CyB,MADW,mCAAmCoD,EAAQ,cAC3C,CACXnD,OAAQ,MACRK,QAAS,CACR,eAAgB,mBAChB,OAAU,sBAGVC,MAAK,SAAAC,GAAO,IAAKA,EAAIC,GAAM,MAAMD,EAClC,OAAOA,EAAIE,UACVH,MAAK,SAAAI,GACJsC,EAAetC,EAAS0C,SACxBpB,GAAmB,GACnBK,GAAmB,MAEpBzB,OAAO,SAAAC,GACPC,MAAMD,EAAIE,eAlBb,IAA4BoC,GA6G1BpB,qBAAsB,SAACzD,GAAD,OArCvBsE,EAD6BO,EAsCuB7E,QAnCpDyB,MADY,mCAAmCoD,EAAQ,SAC5C,CACVnD,OAAQ,SACRK,QAAS,CACR,eAAgB,mBAChB,OAAU,sBAGVC,MAAK,SAAAC,GAAO,IAAKA,EAAIC,GAAM,MAAMD,EAClC,OAAOA,EAAIE,UACVH,MAAK,SAAAI,GACJ8B,EAAe9B,EAAS0C,SACxBpB,GAAmB,GACnBK,GAAmB,MAEpBzB,OAAO,SAAAC,GACPC,MAAMD,EAAIE,eAlBb,IAA8BoC,GAuC5BnB,mBAAoB,SAAC2B,GAAD,OAAY3B,EAAmB2B,IACnDhD,kBAAoB,SAACrC,GAAD,OAAS4E,EAAY5E,MAKvC2E,EAEH,kBAACY,EAAD,CACCrC,QAASuB,EACTX,cAAe,SAACnE,GAAD,OAlGjB,SAAuBA,GACtBA,EAAMwB,iBACN,IAAMqE,EAAM,mCAAmC7F,EAAM0B,OAAOrB,GAAGI,MAAM,SACjEgB,EAAU,CAACpB,GAAIL,EAAM0B,OAAOrB,GAAGI,MACnCL,KAAMJ,EAAM0B,OAAOtB,KAAKK,MACxBkD,KAAM3D,EAAM0B,OAAOiC,KAAKlD,MACxBmD,MAAO5D,EAAM0B,OAAOkC,MAAMnD,MAC1BiD,WAAY1D,EAAM0B,OAAOgC,WAAWjD,MACpCuD,YAAahE,EAAM0B,OAAOsC,YAAYvD,OACrCqB,MAAM+D,EAAK,CACX9D,OAAQ,QACRC,KAAMC,KAAKC,UAAUT,GACrBW,QAAS,CACR,eAAgB,mBAChB,OAAU,sBAGVC,MAAK,SAAAC,GAAO,IAAKA,EAAIC,GAAM,MAAMD,EAClC,OAAOA,EAAIE,UACVH,MAAK,SAAAI,GACJgC,EAAehC,EAAS0C,SACxBpB,GAAmB,MAEpBpB,OAAO,SAAAC,GACPC,MAAMD,EAAIE,eA0EeqB,CAAcnE,IACxCoE,mBAAoB,SAACsB,GAAD,OAAYtB,EAAmBsB,MAMrD,yBAAK5F,UAAU,aACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,aACd,yBAAKA,UAAU,YAAYa,MAAM,UAAS,6BACzC,wBAAIsD,MAAM,cAAa,0BAAM5D,GAAG,SAAT,uBAExB,yBAAK4D,MAAM,aACTK,EAAeJ,KAAI,SAACX,GAAD,OACnB,yBAAKzD,UAAU,aACd,yBAAKA,UAAU,aACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,YAAW,4BAAKyD,EAAQnD,OACvC,yBAAKN,UAAU,YAAYyD,EAAQI,KAAnC,IAA0CJ,EAAQK,OAClD,yBAAK9D,UAAU,YAAW,2BAAOA,UAAU,kBAAkBK,KAAK,SAASM,MAAM,OAAOG,QAAS,kBAAMqE,EAAY1B,EAAQlD,SACtH,6BACN,6BAAMkD,EAAQS,mBAMlB,yBAAKlE,UAAU,YAAYa,MAAM,SAChC,2BAAOb,UAAU,kBAAkBK,KAAK,SAASM,MAAM,MAAMG,QAAS,WA5LzEiE,GAAkB,W,qBC7BNiB,MAJf,WACE,OAAQ,kBAAC,EAAD,OCIUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrE,MAAK,SAAAsE,GACjCA,EAAaC,iB","file":"static/js/main.228f1e54.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport DatePicker from \"react-datepicker\";\n\nexport default (props) => {\n\n  const [date, setDate] = useState(new Date())\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n         <div className=\"col-md-12\">\n            <div className=\"card my-4\">\n              <h5 className=\"card-header\">Create A New Company</h5>\n              <br/>\n                <form onSubmit={event => props.onCreateCompany(event)}>\n                  <div className=\"form-group col-md-12\">\n                    <label for=\"formGroupExampleInput\"><label for=\"company_name\">Company Name</label>:</label>\n                    <input type=\"text\" name=\"name\" id=\"name\" className=\"form-control\"/>\n                  </div>\n                  <div className=\"form-group col-md-12\">\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-5\">\n                        <label for=\"inputCity\"><label for=\"company_city\">City</label>:</label>\n                        <input type=\"text\" name=\"city\" id=\"city\" className=\"form-control\"/>\n                      </div>\n                      <div className=\"form-group col-md-3\">\n                        <label for=\"inputState\"><label for=\"company_state\">State</label>:</label>\n                        <input type=\"text\" name=\"state\" id=\"state\" className=\"form-control\"/>\n                      </div>\n                      <div className=\"form-group col-md-4\">\n                        <label for=\"inputState\"><label for=\"company_founded_date\">Founded date</label>:</label>\n                        <div className=\"input-group\">\n                          <DatePicker \n                            selected={date}\n                            onChange={(dat) => setDate(dat)}\n                          />\n                          <input \n                            className=\"form-control datepicker\" \n                            type=\"hidden\" \n                            name=\"founded_on\" \n                            id=\"founded_on\"\n                            value={date}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-group col-md-12\">\n                    <label for=\"exampleFormControlTextarea1\"><label for=\"company_description\">Description</label>:</label>\n                    <textarea name=\"description\" id=\"description\" rows=\"3\" className=\"form-control\"></textarea>\n                  </div>\n                  <div className=\"form-group col-md-12\" align=\"right\">\n                    <div className=\"col-sm-12\">\n                      <button type=\"button\" className=\"btn btn-default\" onClick={() => props.setAddCompanyflag(false)}>Back</button>\n                      <input type=\"submit\" name=\"commit\" className=\"btn btn-primary\" value=\"Create Company\" data-disable-with=\"Create Company\"/>\n                    </div>\n                  </div>\n                </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { Modal } from 'react-bootstrap';\n\nexport default (props) => {\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const url = \"http://localhost:5000/founders.json?\"\n  \tlet payload = {\n      name: event.target.name.value,\n      title: event.target.title.value,\n      company_id: props.companyId\n    }\n    fetch(url, {\n\t  \tmethod: 'POST',\n\t  \tbody: JSON.stringify({founder: payload}),\n\t  \theaders: {\n\t    'Content-Type': 'application/json',\n\t    'Accept': 'application/json',\n\t  \t},\n\t  })\n    .then(res =>{if (!res.ok) { throw res }\n      return res.json()\n    })\n    .then(response => {\n      props.updateCompanyView()\n      props.handleClose()\n    })\n    .catch( err => {\n\t    alert(err.statusText)\n\t  })\n\n  }\n\n  return (\n    <Modal show={props.show} onHide={props.handleClose} animation={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>Create Founder</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"Name\">Name</label>\n          <input type=\"text\" className=\"form-control\" name=\"name\" id=\"name\" placeholder=\"Name\" aria-describedby=\"emailHelp\"/>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" className=\"form-control\" name=\"title\" id=\"title\" placeholder=\"title\"/>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n      </form>\n      </Modal.Body>\n    </Modal>\n  )\n\n}","import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nexport default (props) => {\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const url = \"http://localhost:5000/categories.json?\"\n  \tlet payload = {\n      name: event.target.name.value,\n      company_id: props.companyId\n    }\n    fetch(url, {\n\t  \tmethod: 'POST',\n\t  \tbody: JSON.stringify({category: payload}),\n\t  \theaders: {\n\t    'Content-Type': 'application/json',\n\t    'Accept': 'application/json',\n\t  \t},\n\t  })\n    .then(res =>{if (!res.ok) { throw res }\n      return res.json()\n    })\n    .then(response => {\n      props.updateCompanyView()\n      props.handleClose()\n    })\n    .catch( err => {\n\t    alert(err.statusText)\n\t  })\n\n  }\n\n  return (\n    <Modal show={props.show} onHide={props.handleClose} animation={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>Create Category</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"Name\">Name</label>\n          <input type=\"text\" className=\"form-control\" name=\"name\" id=\"name\" placeholder=\"Name\" aria-describedby=\"emailHelp\"/>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n      </form>\n      </Modal.Body>\n    </Modal>\n  )\n\n}","import React, { useState } from 'react';\nimport AddFounder from './AddFounder';\nimport AddCategory from './AddCategory';\n\nexport default (props) => {\n\n  const [showFounder, setShowFounder] = useState(false);\n  const [showCategory, setShowCategory] = useState(false);\n\n  const handleClose = () => setShowFounder(false);\n  const handleShow = () => setShowFounder(true);\n\n  const handleCloseCategory = () => setShowCategory(false);\n  const handleShowCategory = () => setShowCategory(true);\n  \n  const {company, founders, categories} = props;\n\n  return ( \n    <div className=\"container\">\n      <AddFounder \n        show={showFounder}\n        companyId={company.id}\n        handleClose={handleClose}\n        updateCompanyView={ () => props.updateCompanyView(company.id)}\n      />\n      <AddCategory \n        show={showCategory}\n        handleClose={handleCloseCategory}\n        companyId={company.id}\n        updateCompanyView={ () => props.updateCompanyView(company.id)}\n      />\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card my-4\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title\">{company.name}</h2><br/>\n              <div className=\"row\">\n                <div className=\"col-sm-5\">\n                  <p><i className=\"fa fa-calendar\"></i> {company.founded_on}</p>\n                </div>\n                <div className=\"col-sm-2\">\n                  <p><i className=\"fa fa-map-marker\"></i> {company.city}{company.state}</p>\n                </div>\n                <div className=\"separator\"></div>\n                <div className=\"col-sm-5\">\n                  <input className=\"btn btn-primary\" type=\"button\" value=\"Edit\" onClick={() => props.trggierEditCompany(company.id)}/> \n                  <input className=\"btn btn-danger\" type=\"button\" value=\"Delete\" onClick={() => props.trggierDeleteCompany(company.id)}/>\n                  <input className=\"btn btn-warning\" type=\"button\" value=\"Back\" onClick={() => props.setviewCompanyflag(false)}/>\n                </div>\n              </div><br/>\n              <p className=\"card-text\">{company.description}</p>\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div class=\"card my-4\">\n                    <h5 class=\"card-header\">Founders</h5>\n                    <div className=\"card-body\">\n                      <div className=\"row text-center\">\n                        {!!founders ? (founders.map((founder) => (\n                          <div className=\"col-lg-5\">\n                            <h5>{founder.name} : <span>{founder.title}</span></h5>\n                          </div>\n                        ))) : false}\n                      </div>\n                      <div className=\"col-md-12\" align=\"right\">\n                        <input className=\"btn btn-primary\" type=\"button\" onClick={handleShow} value=\"Add Founder\"/>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"card my-4\">\n                    <h5 className=\"card-header\">Categories</h5>\n                    <div className=\"card-body\">\n                      <div className=\"row text-center\">\n                        {!!categories ? (categories.map((category) => (\n                          <div className=\"col-lg-5\">\n                            <h5>{category.name}</h5>\n                          </div>\n                        ))) : false}\n                      </div>\n                       <div className=\"col-md-12\" align=\"right\">\n                        <input className=\"btn btn-primary\" type=\"button\" value=\"Add Category\" onClick={handleShowCategory}/>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, {useState} from 'react';\nimport DatePicker from \"react-datepicker\";\n\nexport default (props) => {\n\n  const {company} = props;\n\n  const [date, setDate] = useState(new Date(company.founded_on))\n\n  return ( \n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n         <div className=\"col-md-12\">\n            <div className=\"card my-4\">\n              <h5 className=\"card-header\">Edit Company</h5>\n              <br/>\n                <form onSubmit={event => props.UpdateCompany(event)}>\n                  <div className=\"form-group col-md-12\">\n                    <label for=\"formGroupExampleInput\"><label for=\"company_name\">Company Name</label>:</label>\n                    <input type=\"text\" name=\"name\" id=\"name\" value={company.name} className=\"form-control\"/>\n                  </div>\n                  <div className=\"form-group col-md-12\">\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-md-5\">\n                        <label for=\"inputCity\"><label for=\"company_city\">City</label>:</label>\n                        <input type=\"text\" name=\"city\" id=\"city\" value={company.city} className=\"form-control\"/>\n                        <input type=\"hidden\" name=\"id\" id=\"id\" value={company.id} className=\"form-control\"/>\n                      </div>\n                      <div className=\"form-group col-md-3\">\n                        <label for=\"inputState\"><label for=\"company_state\">State</label>:</label>\n                        <input type=\"text\" name=\"state\" id=\"state\" value={company.state} className=\"form-control\"/>\n                      </div>\n                      <div className=\"form-group col-md-4\">\n                        <label for=\"inputState\"><label for=\"company_founded_date\">Founded date</label>:</label>\n                        <div className=\"input-group\">\n                          <DatePicker \n                            selected={date}\n                            onChange={(dat) => setDate(dat)}\n                          />\n                          <input \n                            className=\"form-control datepicker\" \n                            type=\"hidden\" \n                            name=\"founded_on\" \n                            id=\"founded_on\"\n                            value={date}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-group col-md-12\">\n                    <label for=\"exampleFormControlTextarea1\"><label for=\"company_description\">Description</label>:</label>\n                    <textarea name=\"description\" id=\"description\" rows=\"3\" value={company.description} className=\"form-control\"></textarea>\n                  </div>\n                  <div className=\"form-group col-md-12\" align=\"right\">\n                    <div className=\"col-sm-12\">\n                      <input type=\"submit\" name=\"commit\" className=\"btn btn-primary\" value=\"Update Company\" data-disable-with=\"Create Company\"/>\n                      <input className=\"btn btn-warning\" type=\"button\" value=\"Back\" onClick={() => props.seteditCompanyflag(false)}/>\n                    </div>\n                  </div>\n                </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, {useState, useEffect} from 'react';\nimport CreateForm from './CreateForm';\nimport CompanyView from './CompanyView';\nimport EditForm from './EditForm';\n\n\nfunction Companies(){\n\t\n\tconst [getcompanylist, setlistCompany] = useState([]);\n\n\tconst [getcompanyview, setviewCompany] = useState([]);\n\tconst [getcompanyviewflag, setviewCompanyflag] = useState(false)\n\tconst [getcompanyviewid, setviewCompanyid] = useState(0)\n\n\tconst [getcompanyaddflag, setaddCompanyflag] = useState(false)\n\n\tconst [getcompanyedit, seteditCompany] = useState([]);\n\tconst [getcompanyeditflag, seteditCompanyflag] = useState(false)\n\n\tconst [getfounderaddflag, setaddfounderflag] = useState(false)\n\n\tconst [getcategoryaddflag, setaddcategoryflag] = useState(false)\n  \n  useEffect(() => {\n  \tconst url = \"http://localhost:5000/companies.json?\"\n    fetch(url, {\n\t  \tmethod: 'GET',\n\t  \theaders: {\n\t    'Content-Type': 'application/json',\n\t    'Accept': 'application/json',\n\t  \t},\n\t  })\n    .then(res => res.json())\n    .then(response => {\n      setlistCompany(response.message);\n    })\n    .catch(error => console.log(error));\n  }, []);\n\n  function AddCompany(comp_id){\n  \tsetaddCompanyflag(true)\n  }\n\n  function AddFounder(comp_id){\n  \tsetaddfounderflag(true)\n  }\n\n  function AddCategory(comp_id){\n  \tsetaddcategoryflag(true)\n  }\n\n  function CreateCompany(event){\n  \tevent.preventDefault();\n  \tconst url = \"http://localhost:5000/companies.json?\"\n  \tlet payload = {name: event.target.name.value,\n  \tcity: event.target.city.value,\n\t  state: event.target.state.value,\n\t  founded_on: event.target.founded_on.value,\n\t  description: event.target.description.value}\n    fetch(url, {\n\t  \tmethod: 'POST',\n\t  \tbody: JSON.stringify(payload),\n\t  \theaders: {\n\t    'Content-Type': 'application/json',\n\t    'Accept': 'application/json',\n\t  \t},\n\t  })\n    .then(res =>{if (!res.ok) { throw res }\n    return res.json()})\n    .then(response => {\n      setviewCompany(response);\n      setaddCompanyflag(false);\n      setviewCompanyflag(true);\n    })\n    .catch( err => {\n\t    alert(err.statusText)\n\t  })\n  }\n\n  function trggierEditCompany(comp_id){\n  \tsetviewCompanyid(comp_id)\n\t  const url = \"http://localhost:5000/companies/\"+comp_id+\"/edit.json?\"\n    fetch(url, {\n\t  \tmethod: 'GET',\n\t  \theaders: {\n\t    'Content-Type': 'application/json',\n\t    'Accept': 'application/json',\n\t  \t},\n\t  })\n    .then(res =>{if (!res.ok) { throw res }\n    return res.json()})\n    .then(response => {\n      seteditCompany(response.message);\n      setviewCompanyflag(false);\n      seteditCompanyflag(true);\n    })\n    .catch( err => {\n\t    alert(err.statusText)\n\t  })\n  }\n\n  function UpdateCompany(event){\n  \tevent.preventDefault();\n  \tconst url = \"http://localhost:5000/companies/\"+event.target.id.value+\".json?\"\n  \tlet payload = {id: event.target.id.value,\n  \tname: event.target.name.value,\n  \tcity: event.target.city.value,\n\t  state: event.target.state.value,\n\t  founded_on: event.target.founded_on.value,\n\t  description: event.target.description.value}\n    fetch(url, {\n\t  \tmethod: 'PATCH',\n\t  \tbody: JSON.stringify(payload),\n\t  \theaders: {\n\t    'Content-Type': 'application/json',\n\t    'Accept': 'application/json',\n\t  \t},\n\t  })\n    .then(res =>{if (!res.ok) { throw res }\n    return res.json()})\n    .then(response => {\n      setviewCompany(response.message);\n      setviewCompanyflag(true);\n    })\n    .catch( err => {\n\t    alert(err.statusText)\n\t  })\n  }\n\n  function ViewCompany(comp_id){\n  \tsetviewCompanyid(comp_id)\n\t  const url = \"http://localhost:5000/companies/\"+comp_id+\".json?\"\n    fetch(url, {\n\t  \tmethod: 'GET',\n\t  \theaders: {\n\t    'Content-Type': 'application/json',\n\t    'Accept': 'application/json',\n\t  \t},\n\t  })\n    .then(res =>{if (!res.ok) { throw res }\n    return res.json()})\n    .then(response => {\n      setviewCompany(response.message);\n      setviewCompanyflag(true);\n    })\n    .catch( err => {\n\t    alert(err.statusText)\n\t  })\n  }\n\n  function trggierDeleteCompany(comp_id){\n  \tsetviewCompanyid(comp_id)\n  \tconst url = \"http://localhost:5000/companies/\"+comp_id+\".json?\"\n  \tfetch(url, {\n\t  \tmethod: 'DELETE',\n\t  \theaders: {\n\t    'Content-Type': 'application/json',\n\t    'Accept': 'application/json',\n\t  \t},\n\t  })\n    .then(res =>{if (!res.ok) { throw res }\n    return res.json()})\n    .then(response => {\n      setlistCompany(response.message);\n      setviewCompanyflag(false);\n      seteditCompanyflag(false);\n    })\n    .catch( err => {\n\t    alert(err.statusText)\n\t  })\n  }\n\n  if (getcompanyaddflag){\n\t\treturn (\n\t\t\t<CreateForm \n\t\t\t\tonCreateCompany={ (event) => CreateCompany(event)}\n\t\t\t\tsetAddCompanyflag={(isTrue) => setaddCompanyflag(isTrue)}\n\t\t\t/>\n\t\t)\n  }\n\n  if (getcompanyviewflag){\n  \treturn (\n\t\t\t<CompanyView \n\t\t\t\tcompany={getcompanyview.company}\n\t\t\t\tfounders={getcompanyview.founders}\n\t\t\t\tcategories={getcompanyview.categories}\n\t\t\t\ttrggierEditCompany={(id) => trggierEditCompany(id)}\n\t\t\t\ttrggierDeleteCompany={(id) => trggierDeleteCompany(id)}\n\t\t\t\tsetviewCompanyflag={(isTrue) => setviewCompanyflag(isTrue)}\n\t\t\t\tupdateCompanyView={ (id) =>  ViewCompany(id) }\n\t\t\t/>\n\t\t)\n  }\n\n  if (getcompanyeditflag){\n\t\treturn (\n\t\t\t<EditForm \n\t\t\t\tcompany={getcompanyedit}\n\t\t\t\tUpdateCompany={(event) => UpdateCompany(event)}\n\t\t\t\tseteditCompanyflag={(isTrue) => seteditCompanyflag(isTrue)}\n\t\t\t/>\n\t\t)\n  }\n\n  return (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t<div className=\"col-md-12\" align=\"center\"><br/>\n\t\t\t\t\t\t<h3 class=\"card-title\"><span id=\"title\">List of Companies</span></h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\t\t{getcompanylist.map((company) => (\n\t\t\t\t\t\t\t<div className=\"card mb-4\">\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-6\"><h4>{company.name}</h4></div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-4\">{company.city} {company.state}</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-2\"><input className=\"btn btn-primary\" type=\"button\" value=\"View\" onClick={() => ViewCompany(company.id)}/></div>\n\t\t\t\t\t\t\t\t\t</div><br/>\n\t\t\t\t\t\t\t\t\t<div>{company.description}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"col-md-12\" align=\"right\">\n\t\t\t\t\t\t<input className=\"btn btn-primary\" type=\"button\" value=\"Add\" onClick={() => AddCompany()}/>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Companies;","import React from 'react';\nimport Companies from './components/Companies';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\n\nfunction App() {\n  return (<Companies/>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}